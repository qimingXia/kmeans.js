class Kmeans{constructor(_numofclusters,_numofspots,_background){this.spots=[],this.nodes=[],this.numofclusters=_numofclusters||0,this.numofspots=_numofspots||0,this.finished=!1,this.background=_background||255}init(){for(let i=0;i<this.numofspots;i++)this.spots.push(new Spot);for(var i=0;i<this.numofclusters;i++){let c=new Node(random(255),random(255),random(255),this);this.nodes.push(c)}}addNode(){let n1=new Node(random(255),random(255),random(255),this);this.nodes.push(n1),this.numofclusters++,this.finished=!1,this.update(),this.show()}addSpots(x,y,n){if(1==n||null==n){let spot=new Spot(mouseX,mouseY);this.spots.push(spot),this.numofspots++}else for(let i=0;i<n;i++){let spot=new Spot(mouseX+random(-10,10),mouseY+random(-10,10));this.spots.push(spot),this.numofspots++}this.finished=!1,this.update()}update(){for(;!this.finished;){for(let node of this.nodes)node.spots.length>0&&node.clearSpots();for(let spot of this.spots)spot.findNearest(this.nodes);for(let node of this.nodes)node.spots.length>0&&node.update();this.show(),0==this.numofspots&&(this.finished=!0)}}show(){background(this.background);for(let spot of this.spots)spot.show();for(let node of this.nodes)node.show()}}class Node{constructor(_r,_g,_b,_kmean){this.x=random(0,width),this.y=random(0,height),this.r=_r,this.g=_g,this.b=_b,this.w=15,this.spots=[],this.kmean=_kmean}show(){strokeWeight(2),stroke(0);let c=color(this.r,this.g,this.b);fill(c);let x=this.x,y=this.y,xs=7,ys=7;beginShape(),vertex(x,y-7),vertex(x+7,y),vertex(x,y+7),vertex(x-7,y),endShape(CLOSE)}update(){let xsum=0,ysum=0;for(let i=0;i<this.spots.length;i++)xsum+=this.spots[i].x,ysum+=this.spots[i].y;let nx=floor(xsum/this.spots.length),ny=floor(ysum/this.spots.length);nx==this.x&&ny==this.y&&(this.kmean.finished=!0),this.x=nx,this.y=ny}clearSpots(){this.spots=[]}}class Spot{constructor(_x,_y){this.x=_x||random(0,width),this.y=_y||random(0,height),this.r=10,this.node=null}findNearest(nodes1){let maxD=1/0,winner=null;for(let i=0;i<nodes1.length;i++){let d=dist(this.x,this.y,nodes1[i].x,nodes1[i].y);d<maxD&&(maxD=d,winner=nodes1[i])}winner.spots.push(this),this.node=winner}show(){if(noStroke(),fill(255),this.node&&this.node.kmean.background>=215){let c=color(this.node.r,this.node.g,this.node.b);fill(c)}if(ellipse(this.x,this.y,this.r),this.node){let c=color(this.node.r,this.node.g,this.node.b);stroke(c)}line(this.x,this.y,this.node.x,this.node.y)}}